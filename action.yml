name: "imgcmp"
description: "Optimize images in your repository. Supported image file formats: JPEG, PNG, GIF, SVG, WEBP"
author: "9sako6"
branding:
  icon: "image"
  color: "blue"
inputs:
  token:
    description: "A Personal Access Token. See https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token"
    required: true
  paths-ignore-regexp:
    description: "A regular expression for images' paths you don't want to compress."
    required: false
    default: ""
outputs:
  pull-request-number:
    description: "A pull request number created by imgcmp."
    value: ${{ steps.set-outputs.outputs.pull-request-number }}
runs:
  using: "composite"
  steps:
    - uses: denoland/setup-deno@v1.1.0
      if: startsWith(github.head_ref, 'actions/imgcmp/') != true
      with:
        deno-version: "1.19.2"
    - name: Install cwebp, gifsicle, jpegoptim, optipng, svgo
      if: startsWith(github.head_ref, 'actions/imgcmp/') != true
      shell: bash
      run: |
        sudo apt-get install -y webp gifsicle jpegoptim optipng
        npm install -g svgo
        cwebp -version
        gifsicle --version
        jpegoptim --version
        optipng -v
        svgo -v
    - name: Branch information
      if: startsWith(github.head_ref, 'actions/imgcmp/') != true
      shell: bash
      run: |
        if [ '${{ github.event_name }}' = 'pull_request' ]; then
          branch=${{ github.head_ref }}
        else
          branch=${{ github.ref_name }}
        fi
        echo ::set-output name=base_branch::${branch}
      id: branch
    - uses: actions/checkout@v3
      if: startsWith(github.head_ref, 'actions/imgcmp/') != true
      with:
        ref: ${{ steps.branch.outputs.base_branch }}
    - name: Get actions information
      if: startsWith(github.head_ref, 'actions/imgcmp/') != true
      shell: bash
      run: |
        if [ '.' = $(basename ${{ github.action_path }}) ]; then
          if [ '${{ github.event_name }}' = 'pull_request' ]; then
            tag='${{ steps.branch.outputs.base_branch }}'
          else
            tag=${GITHUB_REF##*/}
          fi
        else
          tag=$(basename ${{ github.action_path }})
        fi
        echo ::set-output name=tag::${tag}
      id: actions-info
    - name: Git reset
      if: startsWith(github.head_ref, 'actions/imgcmp/') != true
      shell: bash
      run: |
        # NOTE: If the trigger event is 'pull_request', `git fetch` is necessary.
        git fetch
        git reset --hard origin/${{ steps.branch.outputs.base_branch }}
    - name: Export images' statistics in json before optimization
      if: startsWith(github.head_ref, 'actions/imgcmp/') != true
      shell: bash
      run: |
        deno run \
          --allow-read \
          --allow-write \
          https://raw.githubusercontent.com/9sako6/imgcmp/${{ steps.actions-info.outputs.tag }}/src/export_stat.ts \
          '${{ inputs.paths-ignore-regexp }}' \
          '/tmp/imgcmp-stat.json'
    - name: Optimize images
      if: startsWith(github.head_ref, 'actions/imgcmp/') != true
      shell: bash
      run: |
        deno run \
          --allow-read \
          --allow-run \
          https://raw.githubusercontent.com/9sako6/imgcmp/${{ steps.actions-info.outputs.tag }}/src/optimize.ts \
          '${{ inputs.paths-ignore-regexp }}'
    - name: Export images' statistics in json after optimization
      if: startsWith(github.head_ref, 'actions/imgcmp/') != true
      shell: bash
      run: |
        deno run \
          --allow-read \
          --allow-write \
          https://raw.githubusercontent.com/9sako6/imgcmp/${{ steps.actions-info.outputs.tag }}/src/export_stat.ts \
          '${{ inputs.paths-ignore-regexp }}' \
          '/tmp/imgcmp-stat.json'
    - name: Export images' statistics in json after optimization
      if: startsWith(github.head_ref, 'actions/imgcmp/') != true
      shell: bash
      run: |
        message=$(deno run \
          --allow-read \
          https://raw.githubusercontent.com/9sako6/imgcmp/${{ steps.actions-info.outputs.tag }}/src/show_stat_message.ts \
          '/tmp/imgcmp-stat.json'
        )

        title=$(deno run \
          --allow-read \
          https://raw.githubusercontent.com/9sako6/imgcmp/${{ steps.actions-info.outputs.tag }}/src/show_stat_title.ts \
          '/tmp/imgcmp-stat.json'
        )

        echo ::set-output name=message::${message}
        echo ::set-output name=title::${title}
      id: template
    - name: Check if images were compressed
      if: startsWith(github.head_ref, 'actions/imgcmp/') != true
      shell: bash
      run: |
        if [ -z "$(git diff --name-only)" ]; then
          echo 'There was no change in all the images.'
          echo "::set-output name=no_change::true"
        else
          echo "::group::git diff"
          git diff --name-only
          echo "::endgroup::"
        fi
      id: diff
    - name: Commit images
      if: startsWith(github.head_ref, 'actions/imgcmp/') != true
      shell: bash
      run: |
        if [ -n "${{ steps.diff.outputs.no_change }}" ]; then
          echo 'This step is skipped.'
          exit 0
        fi

        git config --local user.name "GitHub"
        git config --local user.email "noreply@github.com"
        git add .
        git commit -m "Optimize images by imgcmp action"

        sha=$(git rev-parse --short HEAD)
        new_branch="actions/imgcmp/${sha}"

        echo ::set-output name=sha::${sha}
        echo ::set-output name=new_branch::${new_branch}
      id: commit
    - name: Create a pull request
      if: startsWith(github.head_ref, 'actions/imgcmp/') != true
      uses: peter-evans/create-pull-request@v3.14.0
      with:
        token: ${{ inputs.token }}
        committer: GitHub <noreply@github.com>
        author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
        branch: ${{ steps.commit.outputs.new_branch }}
        base: ${{ steps.branch.outputs.base_branch }}
        title: ${{ steps.template.outputs.title }}
        body: ${{ steps.template.outputs.message }}
        draft: false
        delete-branch: true
    - name: Set outputs
      if: startsWith(github.head_ref, 'actions/imgcmp/') != true
      shell: bash
      id: set-outputs
      run: |
        echo ::set-output name=pull-request-number::$PULL_REQUEST_NUMBER
    - name: Check outputs
      if: startsWith(github.head_ref, 'actions/imgcmp/') != true
      shell: bash
      run: |
        echo "pull-request-number: ${{ steps.set-outputs.outputs.pull-request-number }}"
