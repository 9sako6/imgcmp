name: "imgcmp"
description: "Optimize images in your repository. Supported image file formats: JPEG, PNG, GIF, SVG, WEBP"
author: "9sako6"
branding:
  icon: "image"
  color: "blue"
inputs:
  token:
    description: "A Personal Access Token. See https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token"
    required: true
  paths-ignore-regexp:
    description: "A regular expression for images' paths you don't want to compress."
    required: false
    default: ""
runs:
  using: "composite"
  steps:
    - uses: actions/setup-node@v2
      if: ${{ startsWith(github.head_ref, 'actions/imgcmp/') != true }}
      with:
        node-version: "16"
    - name: Install cwebp, gifsicle, jpegoptim, optipng, svgo
      if: ${{ startsWith(github.head_ref, 'actions/imgcmp/') != true }}
      shell: bash
      run: |
        echo "::group::Install cwebp, gifsicle, jpegoptim, optipng, svgo"
        sudo apt-get install -y webp gifsicle jpegoptim optipng
        npm install -g svgo
        echo "::endgroup::"
        echo "::group::cwebp"
        cwebp -version
        echo "::endgroup::"
        echo "::group::gifsicle"
        gifsicle --version
        echo "::endgroup::"
        echo "::group::jpegoptim"
        jpegoptim --version
        echo "::endgroup::"
        echo "::group::optipng"
        optipng -v
        echo "::endgroup::"
        echo "::group::svgo"
        svgo -v
        echo "::endgroup::"
    - uses: actions/checkout@v2
      if: ${{ startsWith(github.head_ref, 'actions/imgcmp/') != true }}
    - name: Optimize images
      if: ${{ startsWith(github.head_ref, 'actions/imgcmp/') != true }}
      shell: bash
      run: |
        echo "::group::cwebp"
        find * -type f | grep .webp | grep -vE '${{ inputs.paths-ignore-regexp }}' | xargs -I{} cwebp {} -o {} && true
        echo "::endgroup::"
        echo "::group::gifsicle"
        find * -type f | grep .gif | grep -vE '${{ inputs.paths-ignore-regexp }}' | xargs -I{} gifsicle -b -O3 --colors 256 {} && true
        echo "::endgroup::"
        echo "::group::optipng"
        find * -type f | grep .png | grep -vE '${{ inputs.paths-ignore-regexp }}' | xargs -I{} optipng -o2 {} && true
        echo "::endgroup::"
        echo "::group::jpegoptim"
        find * -type f | grep .jpg | grep -vE '${{ inputs.paths-ignore-regexp }}' | xargs -I{} jpegoptim -m85 {} && true
        find * -type f | grep .jpeg | grep -vE '${{ inputs.paths-ignore-regexp }}' | xargs -I{} jpegoptim -m85 {} && true
        echo "::endgroup::"
        echo "::group::svgo"
        find * -type f | grep .svg | grep -vE '${{ inputs.paths-ignore-regexp }}' | xargs -I{} svgo {} && true
        echo "::endgroup::"
    - name: Commit images
      if: ${{ startsWith(github.head_ref, 'actions/imgcmp/') != true }}
      shell: bash
      run: |
        git config --local user.name "GitHub"
        git config --local user.email "noreply@github.com"
        git add .
        git commit -m "Optimize images"
      id: commit
    - name: Create a pull request
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ inputs.token }}
        commit-message: Update report
        committer: GitHub <noreply@github.com>
        author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
        branch: example-patches
        title: '[Example] Update report'
        body: |
          Update report
          - Updated with *today's* date
          - Auto-generated by [create-pull-request][1]

          [1]: https://github.com/peter-evans/create-pull-request
        draft: false
